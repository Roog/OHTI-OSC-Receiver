name: .NET Core Multi Build

on:
    release:
        types: [published]

jobs:
    release:
        name: Release
        strategy:
            matrix:
                kind: ["linux", "windows", "macOS"]
                include:
                    - kind: linux
                      os: ubuntu-latest
                      target: linux-x64
                    - kind: windows
                      os: windows-latest
                      target: win-x64
                    - kind: macOS
                      os: macos-latest
                      target: osx-x64
        runs-on: ${{ matrix.os }}

        steps:
            - name: Checkout
              uses: actions/checkout@v2

            - name: Setup .NET Core
              uses: actions/setup-dotnet@v1
              with:
                  dotnet-version: 7.x #3.1.101

            - name: Clean solution
              run: dotnet clean OHTI-OSC-Receiver.sln --configuration Release && dotnet nuget locals all --clear

            - name: Install dependencies
              run: dotnet restore

            - name: Build
              shell: bash
              run: |
                  # Define some variables for things we need
                  tag=$(git describe --tags --abbrev=0)
                  release_name="OHTI-OSC-Receiver-$tag-${{ matrix.target }}"
                  # Build everything
                  dotnet publish src/OHTI-OSC-Receiver/OHTI-OSC-Receiver.csproj --framework net7.0* --runtime "${{ matrix.target }}" -c Release -o "$release_name" --self-contained true -p:PublishSingleFile=true -p:PublishTrimmed=true 
                  # Pack files
                  if [ "${{ matrix.target }}" == "win-x64" ]; then
                    7z a -tzip "${release_name}.zip" "./${release_name}/*"
                  else
                    tar czvf "${release_name}.tar.gz" "$release_name"
                  fi
                  # Delete output directory
                  rm -r "$release_name"

            - name: Publish
              uses: softprops/action-gh-release@v1
              with:
                  files: "OHTI*"
              env:
                  GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
